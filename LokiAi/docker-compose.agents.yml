# LokiAI Agents System - Complete Docker Compose

services:
  # MongoDB Database
  mongodb:
    image: mongo:7
    container_name: lokiai-agents-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: lokiai2024
      MONGO_INITDB_DATABASE: loki_agents
    volumes:
      - mongodb_agents_data:/data/db
      - ./mongodb-init.js:/docker-entrypoint-initdb.d/init.js:ro
    networks:
      - lokiai-agents-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # AI Agents Backend
  agents-backend:
    build:
      context: .
      dockerfile: Dockerfile.agents-backend
    container_name: lokiai-agents-backend
    restart: unless-stopped
    ports:
      - "5001:5001"
    environment:
      - NODE_ENV=production
      - PORT=5001
      - MONGODB_URI=mongodb://admin:lokiai2024@mongodb:27017/loki_agents?authSource=admin
      - CORS_ORIGIN=http://localhost:5175,http://localhost:80
      
      # Blockchain RPCs
      - ETHEREUM_RPC_URL=https://eth-mainnet.alchemyapi.io/v2/i-rutA7je782gyS7TXnH3
      - POLYGON_RPC_URL=https://polygon-mainnet.alchemyapi.io/v2/ah_ZYvEtNa0Uln6UyUx5N
      - BSC_RPC_URL=https://bsc-dataseed.binance.org/
      - ALCHEMY_SEPOLIA_URL=https://eth-sepolia.g.alchemy.com/v2/i-rutA7je782gyS7TXnH3
      
      # API Keys
      - ALCHEMY_API_KEY=i-rutA7je782gyS7TXnH3
      - ALCHEMY_POLYGON_API_KEY=ah_ZYvEtNa0Uln6UyUx5N
      - COINGECKO_API_KEY=CG-t6QoMv9z8sRjS5ZSScZrVLvg
      - ETHERSCAN_API_KEY=UIISB2I1T8PEEWSTQ226KYF7QU5PQUVSJS
      - POLYGONSCAN_API_KEY=UIISB2I1T8PEEWSTQ226KYF7QU5PQUVSJS
      
      # Agent Configuration
      - MAX_EXECUTION_TIME=300
      - RETRY_ATTEMPTS=3
      - BATCH_SIZE=10
      - CACHE_TTL=300
      
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - lokiai-agents-network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Application
  agents-frontend:
    build:
      context: .
      dockerfile: Dockerfile.agents-frontend
    container_name: lokiai-agents-frontend
    restart: unless-stopped
    ports:
      - "5175:80"
    environment:
      - VITE_API_URL=http://localhost:5001
    depends_on:
      agents-backend:
        condition: service_healthy
    networks:
      - lokiai-agents-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Biometrics Service (Optional)
  biometrics:
    build:
      context: ./biometrics
      dockerfile: Dockerfile
    container_name: lokiai-biometrics
    restart: unless-stopped
    ports:
      - "25000:25000"
    networks:
      - lokiai-agents-network
    volumes:
      - biometrics_models:/app/models
      - biometrics_data:/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:25000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for Caching (Optional)
  redis:
    image: redis:7-alpine
    container_name: lokiai-agents-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - lokiai-agents-network
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  lokiai-agents-network:
    driver: bridge
    name: lokiai-agents-network

volumes:
  mongodb_agents_data:
    name: lokiai_agents_mongodb_data
  biometrics_models:
    name: lokiai_biometrics_models
  biometrics_data:
    name: lokiai_biometrics_data
  redis_data:
    name: lokiai_agents_redis_data